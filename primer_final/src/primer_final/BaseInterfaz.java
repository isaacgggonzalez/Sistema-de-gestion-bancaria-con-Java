package primer_final;

/**
 *
 * @author alanalcaraz
 */
import config.ConexionBD;
import java.awt.Button;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Label;
import java.awt.List;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

import controlador.ProcesosControlador;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import repository.TransaccionRepositorio;
import primer_final.PinTransaccionInterfaz;
import javax.swing.Timer;
import static repository.TransaccionRepositorio.obtenerTarjetas;
import static repository.TransaccionRepositorio.obtenerTodosLosServicios;
import repository.TransaccionRepositorio2;
public class BaseInterfaz extends javax.swing.JFrame {
    private static boolean validarPin = false;

    /**
     * Creates new form BaseInterfaz
     */
    Cliente cliente;
    Cuenta cuenta;
    public BaseInterfaz(Cliente cliente,Cuenta cuenta) {
        initComponents();
        this.setLocationRelativeTo(this); //Ubicar la interfaz en el centro
        this.cliente=cliente;
        this.cuenta=cuenta;
        
        // Crea un Timer que ejecutará la tarea cada segundo
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Llama a la función para actualizar la hora
                actualizarHora();
            }
        });

        // Inicia el Timer
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new JDesktopPane();
        InterfazPrincipal = new JLayeredPane();
        jLayeredPane1 = new JLayeredPane();
        texto_fecha = new JLabel();
        texto_usuario = new JLabel();
        logo = new JLabel();
        jTabbedPane1 = new JTabbedPane();
        jPanel1 = new JPanel();
        botonesMenu = new JLayeredPane();
        boton_pagarTarjeta = new Button();
        boton_deposito = new Button();
        boton_pagarServicio = new Button();
        boton_consultarSaldo = new Button();
        boton_acercaSistema = new Button();
        boton_transferenciaCuenta = new Button();
        boton_cerrarSesion = new Button();
        separador = new JLayeredPane();
        label1 = new Label();
        menu_interaccion = new JLayeredPane();
        menu_transferencia = new Panel();
        boton_cancelarTransaccion1 = new Button();
        boton_confirmarTransaccion1 = new Button();
        cuentaDestino = new JTextField();
        label8 = new Label();
        cedula = new JTextField();
        label9 = new Label();
        nombre_destinatario = new JTextField();
        label10 = new Label();
        monto = new JTextField();
        label11 = new Label();
        label12 = new Label();
        saldo = new JTextField();
        numero_origen = new JTextField();
        label13 = new Label();
        menu_consultarSaldo = new Panel();
        label2 = new Label();
        saldo1 = new JTextField();
        label7 = new Label();
        jScrollPane1 = new JScrollPane();
        TablaConsulta = new JTable();
        menu_deposito = new Panel();
        boton_cancelarTransaccion2 = new Button();
        boton_confirmarDeposito = new Button();
        montoDeposito = new JTextField();
        label17 = new Label();
        saldoDeposito = new JTextField();
        label19 = new Label();
        menu_pagarTarjeta = new Panel();
        boton_cancelarTransaccion6 = new Button();
        boton_confirmarTransaccion6 = new Button();
        label34 = new Label();
        cuentaDestino35 = new JTextField();
        label37 = new Label();
        label38 = new Label();
        cuentaDestino36 = new JTextField();
        cuentaDestino37 = new JTextField();
        label39 = new Label();
        cuentaDestino38 = new JTextField();
        label40 = new Label();
        label41 = new Label();
        cuentaDestino39 = new JTextField();
        list1 = new List();
        jComboBox1 = new JComboBox<>();
        menu_acercaSistema = new Panel();
        label48 = new Label();
        label53 = new Label();
        label54 = new Label();
        label55 = new Label();
        label56 = new Label();
        button3 = new Button();
        menu_pagarServicio = new Panel();
        boton_cancelarTransaccion7 = new Button();
        confirmar_pago_serv = new Button();
        label35 = new Label();
        cuentaDestino33 = new JTextField();
        label42 = new Label();
        monto_ingresado = new JTextField();
        label43 = new Label();
        label44 = new Label();
        saldo_pago_serv = new JTextField();
        cuenta_origen_pago_serv = new JTextField();
        label45 = new Label();
        servicio_a_pagar = new JComboBox<>();
        metodo_de_pago = new JComboBox<>();
        label36 = new Label();
        monto_definido = new JTextField();
        label46 = new Label();
        fondo1 = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new Dimension(1020, 660));
        setResizable(false);

        jDesktopPane1.setMaximumSize(new Dimension(1020, 660));
        jDesktopPane1.setMinimumSize(new Dimension(1020, 660));
        jDesktopPane1.setLayout(new AbsoluteLayout());

        InterfazPrincipal.setEnabled(false);
        InterfazPrincipal.setMaximumSize(new Dimension(1020, 640));
        InterfazPrincipal.setMinimumSize(new Dimension(1020, 640));

        jLayeredPane1.setEnabled(false);
        jLayeredPane1.setMaximumSize(new Dimension(1020, 640));
        jLayeredPane1.setMinimumSize(new Dimension(1020, 640));

        texto_fecha.setFont(new Font("Arial", 1, 28)); // NOI18N
        texto_fecha.setForeground(new Color(255, 255, 255));
        Date fechaActual = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fechaFormateada = formatoFecha.format(fechaActual);
        texto_fecha.setText(fechaFormateada);

        texto_usuario.setFont(new Font("Arial", 1, 48)); // NOI18N
        texto_usuario.setForeground(new Color(255, 255, 255));
        texto_usuario.setText("Bienvenido, usuario!");

        logo.setIcon(new ImageIcon(getClass().getResource("/imagenes/Logo 350x350.png"))); // NOI18N

        jTabbedPane1.setForeground(new Color(255, 255, 255));
        jTabbedPane1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setDebugGraphicsOptions(DebugGraphics.NONE_OPTION);
        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setFont(new Font("Arial", 1, 12)); // NOI18N
        jTabbedPane1.setVerifyInputWhenFocusTarget(false);

        jPanel1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jPanel1.setDoubleBuffered(false);
        jPanel1.setEnabled(false);
        jPanel1.setPreferredSize(new Dimension(1020, 500));

        botonesMenu.setEnabled(false);

        boton_pagarTarjeta.setActionCommand("pagarTarjeta");
        boton_pagarTarjeta.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_pagarTarjeta.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_pagarTarjeta.setLabel("Pagar Tarjeta");
        boton_pagarTarjeta.setMinimumSize(new Dimension(245, 35));
        boton_pagarTarjeta.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_pagarTarjetaActionPerformed(evt);
            }
        });

        boton_deposito.setActionCommand("deposito");
        boton_deposito.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_deposito.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_deposito.setLabel("Deposito");
        boton_deposito.setMinimumSize(new Dimension(245, 35));
        boton_deposito.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_depositoActionPerformed(evt);
            }
        });

        boton_pagarServicio.setActionCommand("pagarServicio");
        boton_pagarServicio.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_pagarServicio.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_pagarServicio.setLabel("Pagar Servicio");
        boton_pagarServicio.setMinimumSize(new Dimension(245, 35));
        boton_pagarServicio.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_pagarServicioActionPerformed(evt);
            }
        });

        boton_consultarSaldo.setActionCommand("consultarSaldo");
        boton_consultarSaldo.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_consultarSaldo.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_consultarSaldo.setLabel("Consultar Saldo");
        boton_consultarSaldo.setMinimumSize(new Dimension(245, 35));
        boton_consultarSaldo.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_consultarSaldoActionPerformed(evt);
            }
        });

        boton_acercaSistema.setActionCommand("acercaSistema");
        boton_acercaSistema.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_acercaSistema.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_acercaSistema.setLabel("Acerca del Sistema");
        boton_acercaSistema.setMinimumSize(new Dimension(245, 35));
        boton_acercaSistema.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_acercaSistemaActionPerformed(evt);
            }
        });

        boton_transferenciaCuenta.setActionCommand("transferenciaCuentas");
        boton_transferenciaCuenta.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_transferenciaCuenta.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_transferenciaCuenta.setLabel("Transferencia entre Cuentas");
        boton_transferenciaCuenta.setMinimumSize(new Dimension(245, 35));
        boton_transferenciaCuenta.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_transferenciaCuentaActionPerformed(evt);
            }
        });

        boton_cerrarSesion.setActionCommand("Cerrar Sesion");
        boton_cerrarSesion.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_cerrarSesion.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_cerrarSesion.setLabel("Cerrar Sesion");
        boton_cerrarSesion.setMinimumSize(new Dimension(245, 35));
        boton_cerrarSesion.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_cerrarSesionActionPerformed(evt);
            }
        });

        botonesMenu.setLayer(boton_pagarTarjeta, JLayeredPane.DEFAULT_LAYER);
        botonesMenu.setLayer(boton_deposito, JLayeredPane.DEFAULT_LAYER);
        botonesMenu.setLayer(boton_pagarServicio, JLayeredPane.DEFAULT_LAYER);
        botonesMenu.setLayer(boton_consultarSaldo, JLayeredPane.DEFAULT_LAYER);
        botonesMenu.setLayer(boton_acercaSistema, JLayeredPane.DEFAULT_LAYER);
        botonesMenu.setLayer(boton_transferenciaCuenta, JLayeredPane.DEFAULT_LAYER);
        botonesMenu.setLayer(boton_cerrarSesion, JLayeredPane.DEFAULT_LAYER);

        GroupLayout botonesMenuLayout = new GroupLayout(botonesMenu);
        botonesMenu.setLayout(botonesMenuLayout);
        botonesMenuLayout.setHorizontalGroup(botonesMenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(botonesMenuLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(botonesMenuLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(boton_pagarServicio, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_deposito, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_pagarTarjeta, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_acercaSistema, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(boton_consultarSaldo, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_transferenciaCuenta, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_cerrarSesion, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        botonesMenuLayout.setVerticalGroup(botonesMenuLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, botonesMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boton_transferenciaCuenta, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addComponent(boton_consultarSaldo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19)
                .addComponent(boton_deposito, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23)
                .addComponent(boton_pagarTarjeta, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19)
                .addComponent(boton_pagarServicio, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22)
                .addComponent(boton_acercaSistema, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boton_cerrarSesion, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        separador.setEnabled(false);
        separador.setMinimumSize(new Dimension(5, 425));

        label1.setAlignment(Label.CENTER);
        label1.setBackground(new Color(181, 181, 181));
        label1.setMinimumSize(new Dimension(5, 425));

        separador.setLayer(label1, JLayeredPane.DEFAULT_LAYER);

        GroupLayout separadorLayout = new GroupLayout(separador);
        separador.setLayout(separadorLayout);
        separadorLayout.setHorizontalGroup(separadorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(label1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE)
        );
        separadorLayout.setVerticalGroup(separadorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(separadorLayout.createSequentialGroup()
                .addComponent(label1, GroupLayout.PREFERRED_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap())
        );

        menu_interaccion.setBackground(new Color(153, 153, 153));
        menu_interaccion.setForeground(new Color(153, 153, 153));

        menu_transferencia.setBackground(new Color(153, 153, 153));
        menu_transferencia.setFont(new Font("Arial", 0, 14)); // NOI18N
        menu_transferencia.setMinimumSize(new Dimension(643, 367));
        menu_transferencia.setPreferredSize(new Dimension(643, 367));

        boton_cancelarTransaccion1.setActionCommand("cancelarTransaccion");
        boton_cancelarTransaccion1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_cancelarTransaccion1.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_cancelarTransaccion1.setForeground(new Color(51, 51, 51));
        boton_cancelarTransaccion1.setLabel("Cancelar Transaccion");
        boton_cancelarTransaccion1.setMaximumSize(new Dimension(190, 30));
        boton_cancelarTransaccion1.setMinimumSize(new Dimension(190, 30));
        boton_cancelarTransaccion1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_cancelarTransaccion1ActionPerformed(evt);
            }
        });

        boton_confirmarTransaccion1.setActionCommand("confirmarTransaccion");
        boton_confirmarTransaccion1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_confirmarTransaccion1.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_confirmarTransaccion1.setForeground(new Color(51, 51, 51));
        boton_confirmarTransaccion1.setLabel("Confirmar Transaccion");
        boton_confirmarTransaccion1.setMinimumSize(new Dimension(190, 30));
        boton_confirmarTransaccion1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_confirmarTransaccion1ActionPerformed(evt);
            }
        });

        cuentaDestino.setBackground(new Color(255, 255, 255));
        cuentaDestino.setForeground(new Color(0, 0, 0));
        cuentaDestino.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestinoActionPerformed(evt);
            }
        });

        label8.setAlignment(Label.CENTER);
        label8.setFont(new Font("Arial", 1, 14)); // NOI18N
        label8.setForeground(new Color(0, 1, 0));
        label8.setText("Cuenta de Destino");

        cedula.setBackground(new Color(255, 255, 255));
        cedula.setForeground(new Color(0, 0, 0));
        cedula.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cedulaActionPerformed(evt);
            }
        });

        label9.setAlignment(Label.CENTER);
        label9.setFont(new Font("Arial", 1, 14)); // NOI18N
        label9.setForeground(new Color(0, 1, 0));
        label9.setText("Nombre de Destinatario");

        nombre_destinatario.setBackground(new Color(255, 255, 255));
        nombre_destinatario.setForeground(new Color(0, 0, 0));
        nombre_destinatario.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                nombre_destinatarioActionPerformed(evt);
            }
        });

        label10.setAlignment(Label.CENTER);
        label10.setFont(new Font("Arial", 1, 14)); // NOI18N
        label10.setForeground(new Color(0, 1, 0));
        label10.setText("Cédula de Destinatario");

        monto.setBackground(new Color(255, 255, 255));
        monto.setForeground(new Color(0, 0, 0));
        monto.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                montoActionPerformed(evt);
            }
        });

        label11.setAlignment(Label.CENTER);
        label11.setFont(new Font("Arial", 1, 14)); // NOI18N
        label11.setForeground(new Color(0, 1, 0));
        label11.setText("Monto");

        label12.setAlignment(Label.CENTER);
        label12.setFont(new Font("Arial", 1, 14)); // NOI18N
        label12.setForeground(new Color(0, 1, 0));
        label12.setText("Cuenta de Origen");

        saldo.setBackground(new Color(196, 196, 196));
        saldo.setForeground(new Color(0, 0, 0));
        saldo.setEnabled(false);
        saldo.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                saldoActionPerformed(evt);
            }
        });

        numero_origen.setBackground(new Color(196, 196, 196));
        numero_origen.setForeground(new Color(0, 0, 0));
        numero_origen.setEnabled(false);
        numero_origen.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                numero_origenActionPerformed(evt);
            }
        });

        label13.setAlignment(Label.CENTER);
        label13.setFont(new Font("Arial", 1, 14)); // NOI18N
        label13.setForeground(new Color(0, 1, 0));
        label13.setText("Saldo");

        GroupLayout menu_transferenciaLayout = new GroupLayout(menu_transferencia);
        menu_transferencia.setLayout(menu_transferenciaLayout);
        menu_transferenciaLayout.setHorizontalGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, menu_transferenciaLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(nombre_destinatario)
                    .addComponent(cuentaDestino)
                    .addComponent(label9, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label8, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cedula, GroupLayout.Alignment.TRAILING)
                    .addComponent(label10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, menu_transferenciaLayout.createSequentialGroup()
                        .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(monto)
                            .addComponent(label11, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(numero_origen)
                        .addComponent(label12, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_transferenciaLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(boton_cancelarTransaccion1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(boton_confirmarTransaccion1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_transferenciaLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label13, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saldo, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        menu_transferenciaLayout.setVerticalGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_transferenciaLayout.createSequentialGroup()
                .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_transferenciaLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(saldo, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(GroupLayout.Alignment.TRAILING, menu_transferenciaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(menu_transferenciaLayout.createSequentialGroup()
                        .addComponent(label12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numero_origen, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monto, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_transferenciaLayout.createSequentialGroup()
                        .addComponent(label8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cuentaDestino, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_transferenciaLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(label9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(nombre_destinatario, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cedula, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menu_transferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_confirmarTransaccion1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_cancelarTransaccion1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        menu_consultarSaldo.setBackground(new Color(153, 153, 153));
        menu_consultarSaldo.setFont(new Font("Arial", 0, 14)); // NOI18N
        menu_consultarSaldo.setPreferredSize(new Dimension(643, 367));

        label2.setAlignment(Label.CENTER);
        label2.setFont(new Font("Arial", 1, 14)); // NOI18N
        label2.setForeground(new Color(0, 1, 0));
        label2.setText("Movimiento de la Cuenta");

        saldo1.setBackground(new Color(196, 196, 196));
        saldo1.setForeground(new Color(0, 0, 0));
        saldo1.setEnabled(false);
        saldo1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                saldo1ActionPerformed(evt);
            }
        });

        label7.setAlignment(Label.CENTER);
        label7.setFont(new Font("Arial", 1, 14)); // NOI18N
        label7.setForeground(new Color(0, 1, 0));
        label7.setText("Saldo");

        jScrollPane1.setEnabled(false);
        jScrollPane1.setRequestFocusEnabled(false);

        TablaConsulta.setBackground(new Color(255, 255, 255));
        TablaConsulta.setForeground(new Color(204, 204, 204));
        TablaConsulta.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fecha", "ID", "Tipo de Servicio", "Monto"
            }
        ));
        TablaConsulta.setEnabled(false);
        TablaConsulta.setGridColor(new Color(204, 204, 204));
        TablaConsulta.setRequestFocusEnabled(false);
        TablaConsulta.setSelectionBackground(new Color(204, 204, 204));
        TablaConsulta.setSelectionForeground(new Color(204, 204, 204));
        TablaConsulta.setShowHorizontalLines(true);
        TablaConsulta.setShowVerticalLines(true);
        TablaConsulta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TablaConsulta);
        TablaConsulta.getColumnModel().getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        GroupLayout menu_consultarSaldoLayout = new GroupLayout(menu_consultarSaldo);
        menu_consultarSaldo.setLayout(menu_consultarSaldoLayout);
        menu_consultarSaldoLayout.setHorizontalGroup(menu_consultarSaldoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, menu_consultarSaldoLayout.createSequentialGroup()
                .addGroup(menu_consultarSaldoLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(GroupLayout.Alignment.LEADING, menu_consultarSaldoLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(menu_consultarSaldoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(label2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)))
                    .addGroup(menu_consultarSaldoLayout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label7, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saldo1, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        menu_consultarSaldoLayout.setVerticalGroup(menu_consultarSaldoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_consultarSaldoLayout.createSequentialGroup()
                .addGroup(menu_consultarSaldoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_consultarSaldoLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(saldo1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(GroupLayout.Alignment.TRAILING, menu_consultarSaldoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addComponent(label2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        menu_deposito.setBackground(new Color(153, 153, 153));
        menu_deposito.setFont(new Font("Arial", 0, 14)); // NOI18N
        menu_deposito.setMaximumSize(new Dimension(643, 367));
        menu_deposito.setMinimumSize(new Dimension(643, 367));
        menu_deposito.setPreferredSize(new Dimension(643, 367));

        boton_cancelarTransaccion2.setActionCommand("cancelarTransaccion");
        boton_cancelarTransaccion2.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_cancelarTransaccion2.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_cancelarTransaccion2.setForeground(new Color(51, 51, 51));
        boton_cancelarTransaccion2.setLabel("Cancelar Transaccion");
        boton_cancelarTransaccion2.setMaximumSize(new Dimension(190, 30));
        boton_cancelarTransaccion2.setMinimumSize(new Dimension(190, 30));
        boton_cancelarTransaccion2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_cancelarTransaccion2ActionPerformed(evt);
            }
        });

        boton_confirmarDeposito.setActionCommand("confirmarTransaccion");
        boton_confirmarDeposito.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_confirmarDeposito.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_confirmarDeposito.setForeground(new Color(51, 51, 51));
        boton_confirmarDeposito.setLabel("Confirmar Transaccion");
        boton_confirmarDeposito.setMinimumSize(new Dimension(190, 30));
        boton_confirmarDeposito.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_confirmarDepositoActionPerformed(evt);
            }
        });

        montoDeposito.setBackground(new Color(255, 255, 255));
        montoDeposito.setForeground(new Color(0, 0, 0));
        montoDeposito.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                montoDepositoActionPerformed(evt);
            }
        });

        label17.setAlignment(Label.CENTER);
        label17.setFont(new Font("Arial", 1, 14)); // NOI18N
        label17.setForeground(new Color(0, 1, 0));
        label17.setText("Monto");

        saldoDeposito.setBackground(new Color(196, 196, 196));
        saldoDeposito.setForeground(new Color(0, 0, 0));
        saldoDeposito.setEnabled(false);
        saldoDeposito.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                saldoDepositoActionPerformed(evt);
            }
        });

        label19.setAlignment(Label.CENTER);
        label19.setFont(new Font("Arial", 1, 14)); // NOI18N
        label19.setForeground(new Color(0, 1, 0));
        label19.setText("Saldo");

        GroupLayout menu_depositoLayout = new GroupLayout(menu_deposito);
        menu_deposito.setLayout(menu_depositoLayout);
        menu_depositoLayout.setHorizontalGroup(menu_depositoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, menu_depositoLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(boton_cancelarTransaccion2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(boton_confirmarDeposito, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_depositoLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label19, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saldoDeposito, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(menu_depositoLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addGroup(menu_depositoLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(montoDeposito)
                    .addComponent(label17, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menu_depositoLayout.setVerticalGroup(menu_depositoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_depositoLayout.createSequentialGroup()
                .addGroup(menu_depositoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_depositoLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(saldoDeposito, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_depositoLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(label19, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(label17, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(montoDeposito, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 725, Short.MAX_VALUE)
                .addGroup(menu_depositoLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_confirmarDeposito, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_cancelarTransaccion2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        menu_pagarTarjeta.setBackground(new Color(153, 153, 153));
        menu_pagarTarjeta.setFont(new Font("Arial", 0, 14)); // NOI18N
        menu_pagarTarjeta.setMinimumSize(new Dimension(643, 367));

        boton_cancelarTransaccion6.setActionCommand("cancelarTransaccion");
        boton_cancelarTransaccion6.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_cancelarTransaccion6.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_cancelarTransaccion6.setForeground(new Color(51, 51, 51));
        boton_cancelarTransaccion6.setLabel("Cancelar Transaccion");
        boton_cancelarTransaccion6.setMaximumSize(new Dimension(190, 30));
        boton_cancelarTransaccion6.setMinimumSize(new Dimension(190, 30));
        boton_cancelarTransaccion6.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_cancelarTransaccion6ActionPerformed(evt);
            }
        });

        boton_confirmarTransaccion6.setActionCommand("confirmarTransaccion");
        boton_confirmarTransaccion6.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_confirmarTransaccion6.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_confirmarTransaccion6.setForeground(new Color(51, 51, 51));
        boton_confirmarTransaccion6.setLabel("Confirmar Transaccion");
        boton_confirmarTransaccion6.setMinimumSize(new Dimension(190, 30));
        boton_confirmarTransaccion6.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_confirmarTransaccion6ActionPerformed(evt);
            }
        });

        label34.setAlignment(Label.CENTER);
        label34.setFont(new Font("Arial", 1, 14)); // NOI18N
        label34.setForeground(new Color(0, 1, 0));
        label34.setText("Seleccionar Tarjeta");

        cuentaDestino35.setBackground(new Color(255, 255, 255));
        cuentaDestino35.setForeground(new Color(0, 0, 0));
        cuentaDestino35.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestino35ActionPerformed(evt);
            }
        });

        label37.setAlignment(Label.CENTER);
        label37.setFont(new Font("Arial", 1, 14)); // NOI18N
        label37.setForeground(new Color(0, 1, 0));
        label37.setText("Monto");

        label38.setAlignment(Label.CENTER);
        label38.setFont(new Font("Arial", 1, 14)); // NOI18N
        label38.setForeground(new Color(0, 1, 0));
        label38.setText("Numero de Tarjeta");

        cuentaDestino36.setBackground(new Color(196, 196, 196));
        cuentaDestino36.setForeground(new Color(0, 0, 0));
        cuentaDestino36.setEnabled(false);
        cuentaDestino36.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestino36ActionPerformed(evt);
            }
        });

        cuentaDestino37.setBackground(new Color(255, 255, 255));
        cuentaDestino37.setForeground(new Color(0, 0, 0));
        cuentaDestino37.setEnabled(false);
        cuentaDestino37.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestino37ActionPerformed(evt);
            }
        });

        label39.setAlignment(Label.CENTER);
        label39.setFont(new Font("Arial", 1, 14)); // NOI18N
        label39.setForeground(new Color(0, 1, 0));
        label39.setText("Saldo");

        cuentaDestino38.setBackground(new Color(255, 255, 255));
        cuentaDestino38.setForeground(new Color(0, 0, 0));
        cuentaDestino38.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestino38ActionPerformed(evt);
            }
        });

        label40.setAlignment(Label.CENTER);
        label40.setFont(new Font("Arial", 1, 14)); // NOI18N
        label40.setForeground(new Color(0, 1, 0));
        label40.setText("Deuda Total");

        label41.setAlignment(Label.CENTER);
        label41.setFont(new Font("Arial", 1, 14)); // NOI18N
        label41.setForeground(new Color(0, 1, 0));
        label41.setText("Deuda Limite");

        cuentaDestino39.setBackground(new Color(255, 255, 255));
        cuentaDestino39.setForeground(new Color(0, 0, 0));
        cuentaDestino39.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestino39ActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new Color(255, 255, 255));
        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[] { "Tu tarjeta", "Otras Tarjetas" }));
        jComboBox1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        GroupLayout menu_pagarTarjetaLayout = new GroupLayout(menu_pagarTarjeta);
        menu_pagarTarjeta.setLayout(menu_pagarTarjetaLayout);
        menu_pagarTarjetaLayout.setHorizontalGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarTarjetaLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(boton_cancelarTransaccion6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(boton_confirmarTransaccion6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarTarjetaLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label39, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cuentaDestino36, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarTarjetaLayout.createSequentialGroup()
                .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(GroupLayout.Alignment.LEADING, menu_pagarTarjetaLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(label34, GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(menu_pagarTarjetaLayout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(cuentaDestino39)
                            .addComponent(label41, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(cuentaDestino38)
                        .addComponent(label40, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarTarjetaLayout.createSequentialGroup()
                            .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(cuentaDestino35)
                                .addComponent(label37, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE))
                            .addGap(30, 30, 30))
                        .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(cuentaDestino37)
                            .addComponent(label38, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE))))
                .addGap(52, 52, 52))
        );
        menu_pagarTarjetaLayout.setVerticalGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_pagarTarjetaLayout.createSequentialGroup()
                .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_pagarTarjetaLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(cuentaDestino36, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarTarjetaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label39, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(menu_pagarTarjetaLayout.createSequentialGroup()
                        .addComponent(label38, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cuentaDestino37, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label40, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cuentaDestino38, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_pagarTarjetaLayout.createSequentialGroup()
                        .addComponent(label34, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label41, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cuentaDestino39, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(label37, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cuentaDestino35, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(menu_pagarTarjetaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_confirmarTransaccion6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_cancelarTransaccion6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        menu_acercaSistema.setBackground(new Color(153, 153, 153));
        menu_acercaSistema.setFont(new Font("Arial", 0, 14)); // NOI18N
        menu_acercaSistema.setMinimumSize(new Dimension(643, 367));
        menu_acercaSistema.setPreferredSize(new Dimension(643, 367));

        label48.setAlignment(Label.CENTER);
        label48.setFont(new Font("Arial", 1, 18)); // NOI18N
        label48.setForeground(new Color(0, 1, 0));
        label48.setText("Facultad Politécnica");

        label53.setAlignment(Label.CENTER);
        label53.setFont(new Font("Arial", 1, 18)); // NOI18N
        label53.setForeground(new Color(0, 1, 0));
        label53.setText("Grupo N° XX");

        label54.setAlignment(Label.CENTER);
        label54.setFont(new Font("Arial", 1, 56)); // NOI18N
        label54.setForeground(new Color(204, 0, 0));
        label54.setText("Examen Final - 2023");

        label55.setAlignment(Label.CENTER);
        label55.setFont(new Font("Arial", 1, 18)); // NOI18N
        label55.setForeground(new Color(0, 1, 0));
        label55.setText("Lista de Integrantes");

        label56.setAlignment(Label.CENTER);
        label56.setFont(new Font("Arial", 1, 18)); // NOI18N
        label56.setForeground(new Color(0, 1, 0));
        label56.setText("Lenguajes de Programación 2");

        button3.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        button3.setFont(new Font("Arial", 1, 14)); // NOI18N
        button3.setForeground(new Color(0, 1, 0));
        button3.setLabel("Ver Documentación");
        button3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        GroupLayout menu_acercaSistemaLayout = new GroupLayout(menu_acercaSistema);
        menu_acercaSistema.setLayout(menu_acercaSistemaLayout);
        menu_acercaSistemaLayout.setHorizontalGroup(menu_acercaSistemaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_acercaSistemaLayout.createSequentialGroup()
                .addGroup(menu_acercaSistemaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_acercaSistemaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(menu_acercaSistemaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(label56, GroupLayout.PREFERRED_SIZE, 279, GroupLayout.PREFERRED_SIZE)
                            .addGroup(menu_acercaSistemaLayout.createSequentialGroup()
                                .addComponent(label48, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                                .addComponent(button3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(menu_acercaSistemaLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(menu_acercaSistemaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(label54, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(label55, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(label53, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34))
        );
        menu_acercaSistemaLayout.setVerticalGroup(menu_acercaSistemaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_acercaSistemaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(menu_acercaSistemaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(label48, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addComponent(label56, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label54, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(label53, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(label55, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(377, 377, 377))
        );

        menu_pagarServicio.setBackground(new Color(153, 153, 153));
        menu_pagarServicio.setFont(new Font("Arial", 0, 14)); // NOI18N
        menu_pagarServicio.setMinimumSize(new Dimension(643, 367));
        menu_pagarServicio.setPreferredSize(new Dimension(643, 367));

        boton_cancelarTransaccion7.setActionCommand("cancelarTransaccion");
        boton_cancelarTransaccion7.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        boton_cancelarTransaccion7.setFont(new Font("Arial", 0, 18)); // NOI18N
        boton_cancelarTransaccion7.setForeground(new Color(51, 51, 51));
        boton_cancelarTransaccion7.setLabel("Cancelar Transaccion");
        boton_cancelarTransaccion7.setMaximumSize(new Dimension(190, 30));
        boton_cancelarTransaccion7.setMinimumSize(new Dimension(190, 30));
        boton_cancelarTransaccion7.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_cancelarTransaccion7ActionPerformed(evt);
            }
        });

        confirmar_pago_serv.setActionCommand("confirmarTransaccion");
        confirmar_pago_serv.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        confirmar_pago_serv.setFont(new Font("Arial", 0, 18)); // NOI18N
        confirmar_pago_serv.setForeground(new Color(51, 51, 51));
        confirmar_pago_serv.setLabel("Confirmar Transaccion");
        confirmar_pago_serv.setMinimumSize(new Dimension(190, 30));
        confirmar_pago_serv.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                confirmar_pago_servActionPerformed(evt);
            }
        });

        label35.setAlignment(Label.CENTER);
        label35.setFont(new Font("Arial", 1, 14)); // NOI18N
        label35.setForeground(new Color(0, 1, 0));
        label35.setText("Seleccionar Servicios");

        cuentaDestino33.setBackground(new Color(255, 255, 255));
        cuentaDestino33.setForeground(new Color(0, 0, 0));
        cuentaDestino33.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuentaDestino33ActionPerformed(evt);
            }
        });

        label42.setAlignment(Label.CENTER);
        label42.setFont(new Font("Arial", 1, 14)); // NOI18N
        label42.setForeground(new Color(0, 1, 0));
        label42.setText("Numero de Servicio");

        monto_ingresado.setBackground(new Color(255, 255, 255));
        monto_ingresado.setForeground(new Color(0, 0, 0));
        monto_ingresado.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                monto_ingresadoActionPerformed(evt);
            }
        });

        label43.setAlignment(Label.CENTER);
        label43.setFont(new Font("Arial", 1, 14)); // NOI18N
        label43.setForeground(new Color(0, 1, 0));
        label43.setText("Monto");

        label44.setAlignment(Label.CENTER);
        label44.setFont(new Font("Arial", 1, 14)); // NOI18N
        label44.setForeground(new Color(0, 1, 0));
        label44.setText("Cuenta de Origen");

        saldo_pago_serv.setBackground(new Color(196, 196, 196));
        saldo_pago_serv.setForeground(new Color(0, 0, 0));
        saldo_pago_serv.setEnabled(false);
        saldo_pago_serv.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                saldo_pago_servActionPerformed(evt);
            }
        });

        cuenta_origen_pago_serv.setBackground(new Color(196, 196, 196));
        cuenta_origen_pago_serv.setForeground(new Color(0, 0, 0));
        cuenta_origen_pago_serv.setEnabled(false);
        cuenta_origen_pago_serv.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cuenta_origen_pago_servActionPerformed(evt);
            }
        });

        label45.setAlignment(Label.CENTER);
        label45.setFont(new Font("Arial", 1, 14)); // NOI18N
        label45.setForeground(new Color(0, 1, 0));
        label45.setText("Saldo");

        servicio_a_pagar.setBackground(new Color(255, 255, 255));
        servicio_a_pagar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                servicio_a_pagarActionPerformed(evt);
            }
        });

        metodo_de_pago.setBackground(new Color(255, 255, 255));
        metodo_de_pago.setModel(new DefaultComboBoxModel<>(new String[] { "Saldo de cuenta" }));
        metodo_de_pago.setToolTipText("");
        metodo_de_pago.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                metodo_de_pagoActionPerformed(evt);
            }
        });

        label36.setAlignment(Label.CENTER);
        label36.setFont(new Font("Arial", 1, 14)); // NOI18N
        label36.setForeground(new Color(0, 1, 0));
        label36.setText("Metodo de Pago");

        monto_definido.setBackground(new Color(196, 196, 196));
        monto_definido.setForeground(new Color(0, 0, 0));
        monto_definido.setEnabled(false);
        monto_definido.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                monto_definidoActionPerformed(evt);
            }
        });

        label46.setAlignment(Label.CENTER);
        label46.setFont(new Font("Arial", 1, 14)); // NOI18N
        label46.setForeground(new Color(0, 1, 0));
        label46.setText("Monto del Servicio");

        GroupLayout menu_pagarServicioLayout = new GroupLayout(menu_pagarServicio);
        menu_pagarServicio.setLayout(menu_pagarServicioLayout);
        menu_pagarServicioLayout.setHorizontalGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarServicioLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boton_cancelarTransaccion7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmar_pago_serv, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarServicioLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label45, GroupLayout.PREFERRED_SIZE, 55, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saldo_pago_serv, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarServicioLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label35, GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(servicio_a_pagar, GroupLayout.Alignment.LEADING, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cuentaDestino33, GroupLayout.Alignment.LEADING)
                    .addComponent(label42, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(metodo_de_pago, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label36, GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(monto_definido, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE)
                    .addComponent(label46, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE)
                    .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarServicioLayout.createSequentialGroup()
                            .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(monto_ingresado)
                                .addComponent(label43, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE))
                            .addGap(82, 82, 82))
                        .addGroup(menu_pagarServicioLayout.createSequentialGroup()
                            .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(cuenta_origen_pago_serv, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE)
                                .addComponent(label44, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE))
                            .addContainerGap()))))
        );
        menu_pagarServicioLayout.setVerticalGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_pagarServicioLayout.createSequentialGroup()
                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_pagarServicioLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(saldo_pago_serv, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(GroupLayout.Alignment.TRAILING, menu_pagarServicioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label45, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(menu_pagarServicioLayout.createSequentialGroup()
                        .addComponent(label44, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cuenta_origen_pago_serv, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label46, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monto_definido, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(label43, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monto_ingresado, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                    .addGroup(menu_pagarServicioLayout.createSequentialGroup()
                        .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(menu_pagarServicioLayout.createSequentialGroup()
                                .addComponent(label35, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(servicio_a_pagar, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(metodo_de_pago, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(label36, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addComponent(label42, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cuentaDestino33, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(menu_pagarServicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(confirmar_pago_serv, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_cancelarTransaccion7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        menu_interaccion.setLayer(menu_transferencia, JLayeredPane.DEFAULT_LAYER);
        menu_interaccion.setLayer(menu_consultarSaldo, JLayeredPane.DEFAULT_LAYER);
        menu_interaccion.setLayer(menu_deposito, JLayeredPane.DEFAULT_LAYER);
        menu_interaccion.setLayer(menu_pagarTarjeta, JLayeredPane.DEFAULT_LAYER);
        menu_interaccion.setLayer(menu_acercaSistema, JLayeredPane.DEFAULT_LAYER);
        menu_interaccion.setLayer(menu_pagarServicio, JLayeredPane.DEFAULT_LAYER);

        GroupLayout menu_interaccionLayout = new GroupLayout(menu_interaccion);
        menu_interaccion.setLayout(menu_interaccionLayout);
        menu_interaccionLayout.setHorizontalGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_interaccionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menu_consultarSaldo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_transferencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_deposito, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_acercaSistema, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_pagarTarjeta, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_pagarServicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(23, Short.MAX_VALUE)))
        );
        menu_interaccionLayout.setVerticalGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(menu_interaccionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menu_consultarSaldo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_transferencia, GroupLayout.PREFERRED_SIZE, 365, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(12, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_deposito, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_acercaSistema, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_pagarTarjeta, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(menu_interaccionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(menu_interaccionLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(menu_pagarServicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(botonesMenu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separador, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menu_interaccion))
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonesMenu))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(separador, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(menu_interaccion, GroupLayout.PREFERRED_SIZE, 374, GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Menu Principal", jPanel1);

        jLayeredPane1.setLayer(texto_fecha, JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(texto_usuario, JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(logo, JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTabbedPane1, JLayeredPane.DEFAULT_LAYER);

        GroupLayout jLayeredPane1Layout = new GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(jLayeredPane1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jLayeredPane1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(texto_usuario, GroupLayout.PREFERRED_SIZE, 480, GroupLayout.PREFERRED_SIZE)
                    .addComponent(texto_fecha, GroupLayout.PREFERRED_SIZE, 480, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logo, GroupLayout.PREFERRED_SIZE, 307, GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addComponent(jTabbedPane1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        jLayeredPane1Layout.setVerticalGroup(jLayeredPane1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(texto_fecha, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(texto_usuario, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE))
                    .addComponent(logo, GroupLayout.PREFERRED_SIZE, 179, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, GroupLayout.PREFERRED_SIZE, 456, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        InterfazPrincipal.setLayer(jLayeredPane1, JLayeredPane.DEFAULT_LAYER);

        GroupLayout InterfazPrincipalLayout = new GroupLayout(InterfazPrincipal);
        InterfazPrincipal.setLayout(InterfazPrincipalLayout);
        InterfazPrincipalLayout.setHorizontalGroup(InterfazPrincipalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        InterfazPrincipalLayout.setVerticalGroup(InterfazPrincipalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(InterfazPrincipalLayout.createSequentialGroup()
                .addComponent(jLayeredPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDesktopPane1.add(InterfazPrincipal, new AbsoluteConstraints(0, 0, -1, -1));

        fondo1.setIcon(new ImageIcon(getClass().getResource("/imagenes/Fondo1020x641.png"))); // NOI18N
        fondo1.setToolTipText("");
        fondo1.setMaximumSize(new Dimension(2147483647, 2147483647));
        fondo1.setMinimumSize(new Dimension(1020, 640));
        fondo1.setOpaque(true);
        fondo1.setPreferredSize(new Dimension(1020, 640));
        jDesktopPane1.add(fondo1, new AbsoluteConstraints(0, 0, -1, -1));

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, GroupLayout.PREFERRED_SIZE, 627, GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Button botonPresionadoActualmente = null;
    
    private void boton_consultarSaldoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_consultarSaldoActionPerformed
        saldo1.setText(cuenta.getSaldoCuenta() + "");        
        // Cambiar la apariencia del botón cuando se presiona
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_consultarSaldo.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_consultarSaldo;
        menu_transferencia.setVisible(false);
        menu_consultarSaldo.setVisible(true);
        menu_pagarTarjeta.setVisible(false);
        menu_deposito.setVisible(false);
        menu_pagarServicio.setVisible(false);
        menu_pagarTarjeta.setVisible(false);
        menu_acercaSistema.setVisible(false);
        
        DefaultTableModel modelo = TransaccionRepositorio2.obtenerTransaccionesPorCuenta(cuenta.getIdCuenta());
        TablaConsulta.setModel(modelo);        
    }//GEN-LAST:event_boton_consultarSaldoActionPerformed
    private void boton_transferenciaCuentaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_transferenciaCuentaActionPerformed
        
        
        numero_origen.setText(cuenta.getNumeroCuenta()+ "");
        saldo.setText(cuenta.getSaldoCuenta() + "");
        
        
        //System.out.println(nombreCliente);
        texto_usuario.setText(cliente.getNombreCliente()+" "+cliente.getApellidoCliente());
        
        // Cambiar la apariencia del botón cuando se presiona
        // Restaurar el color original del botón anteriormente presionado
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_transferenciaCuenta.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_transferenciaCuenta;
        //Si esta activo el boton de Transferencia solo que este activo el de menu_transferencia
        menu_transferencia.setVisible(true);
        menu_consultarSaldo.setVisible(false);
        menu_deposito.setVisible(false);
        menu_pagarTarjeta.setVisible(false);
        menu_pagarServicio.setVisible(false);
        menu_pagarTarjeta.setVisible(false);
        menu_acercaSistema.setVisible(false);
    }//GEN-LAST:event_boton_transferenciaCuentaActionPerformed

    private void boton_pagarServicioActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_pagarServicioActionPerformed
        

        
        // Cambiar la apariencia del botón cuando se presiona        
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_pagarServicio.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_pagarServicio;
        menu_transferencia.setVisible(false);
        menu_consultarSaldo.setVisible(false);
        menu_deposito.setVisible(false);
        menu_pagarTarjeta.setVisible(false);
        menu_pagarServicio.setVisible(true);
        menu_pagarTarjeta.setVisible(false);
        menu_acercaSistema.setVisible(false);
        saldo_pago_serv.setText(cuenta.getSaldoCuenta() + "");
        cuenta_origen_pago_serv.setText(cuenta.getNumeroCuenta() + "");
        ArrayList<Servicio> servicios = obtenerTodosLosServicios();
        ArrayList<TarjetaDeCredito> tarjetas = obtenerTarjetas();
        for(Servicio servicio: servicios){
            servicio_a_pagar.addItem(servicio.get_NombreServicio());
        }
        for(TarjetaDeCredito tarjeta: tarjetas){
            if(tarjeta.getId_cliente() == cliente.getIdCliente())
                metodo_de_pago.addItem("TC: " + tarjeta.getNro_tarjeta());
        }
        monto_definido.setText(servicios.get(0).get_CostoServicio()+"");
        monto_ingresado.setEditable(false);
        
    }//GEN-LAST:event_boton_pagarServicioActionPerformed

    private void boton_pagarTarjetaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_pagarTarjetaActionPerformed
        // Cambiar la apariencia del botón cuando se presiona
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_pagarTarjeta.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_pagarTarjeta;
        menu_transferencia.setVisible(false);
        menu_consultarSaldo.setVisible(false);
        menu_deposito.setVisible(false);
        menu_pagarTarjeta.setVisible(true);
        menu_pagarServicio.setVisible(false);
        menu_acercaSistema.setVisible(false);
    }//GEN-LAST:event_boton_pagarTarjetaActionPerformed

    private void boton_depositoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_depositoActionPerformed
         // Cambiar la apariencia del botón cuando se presiona
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_deposito.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_deposito;

        //Si esta activo el boton de Transferencia solo que este activo el de menu_transferencia
        menu_deposito.setVisible(true);
        menu_transferencia.setVisible(false);
        menu_consultarSaldo.setVisible(false);
        menu_pagarTarjeta.setVisible(false);
        menu_pagarServicio.setVisible(false);
        menu_acercaSistema.setVisible(false);
        saldoDeposito.setText(cuenta.getSaldoCuenta()+ "");
    }//GEN-LAST:event_boton_depositoActionPerformed

    private void boton_acercaSistemaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_acercaSistemaActionPerformed
        // Cambiar la apariencia del botón cuando se presiona
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_acercaSistema.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_acercaSistema;

        //Si esta activo el boton de Transferencia solo que este activo el de menu_transferencia
        menu_deposito.setVisible(false);
        menu_transferencia.setVisible(false);
        menu_consultarSaldo.setVisible(false);
        menu_pagarTarjeta.setVisible(false);
        menu_pagarServicio.setVisible(false);
        menu_acercaSistema.setVisible(true);
    }//GEN-LAST:event_boton_acercaSistemaActionPerformed

    private void boton_cerrarSesionActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_cerrarSesionActionPerformed
        // Cambiar la apariencia del botón cuando se presiona
        if (botonPresionadoActualmente != null) {
            botonPresionadoActualmente.setBackground(new java.awt.Color(240, 240, 240));  // Color original del fondo
        }

        // Establecer el color oscuro para el botón actual
        boton_cerrarSesion.setBackground(new java.awt.Color(102, 102, 102));

        // Actualizar la referencia al botón actualmente presionado
        botonPresionadoActualmente = boton_cerrarSesion;

        // Conecto la interfaz cuando inicie sesion,para  que se abra la interfaz de menu principal
        LoginInterfaz ventanaLogin = new LoginInterfaz();
        ventanaLogin.setVisible(true);
        this.dispose();//Cierra esta ventana
    }//GEN-LAST:event_boton_cerrarSesionActionPerformed
    
    private void actualizarHora() {
            // Obtén la fecha y hora actual
            Date fechaActual = new Date();

            // Formatea la fecha en el formato deseado
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            String fechaFormateada = formatoFecha.format(fechaActual);

            // Actualiza el texto del label con la fecha formateada
            texto_fecha.setText(fechaFormateada);
    }
    
    private void saldo1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_saldo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldo1ActionPerformed

    private void boton_cancelarTransaccion1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_cancelarTransaccion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_cancelarTransaccion1ActionPerformed


    private void boton_confirmarTransaccion1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_confirmarTransaccion1ActionPerformed
        Connection connection = ConexionBD.conectar();
        try {
            // Obtener valores de los campos de texto
            long cuenta_Destino = Long.parseLong(cuentaDestino.getText().trim());
            String nombreDestinatario = nombre_destinatario.getText().trim();
            long cedula_destinatario = Long.parseLong(cedula.getText().trim());
            String montoTexto = monto.getText().trim();
            // Convertir la cadena a long
            long montoLong = Long.parseLong(montoTexto);
            
            // Validar que la cuenta_Destino sea positiva
            if (cuenta_Destino <= 0) {
                mostrarMensajeError("La cuenta de destino debe ser un número positivo.");
                return; // Salir del método si la validación no pasa
            }

            // Validar que la cedula_destinatario sea positiva
            if (cedula_destinatario <= 0) {
                mostrarMensajeError("La cédula del destinatario debe ser un número positivo.");
                return; // Salir del método si la validación no pasa
            }

            // Validar que el nombreDestinatario no esté vacío
            if (nombreDestinatario.isEmpty()) {
                mostrarMensajeError("El nombre del destinatario no puede estar vacío.");
                return; // Salir del método si la validación no pasa
            }
            
            if(cuenta.getNumeroCuenta() == cuenta_Destino){
                mostrarMensajeError("No se puede transferir a su misma cuenta.");
                return; // Salir del método si la validación no pasa
            
            }
            
        if(TransaccionRepositorio.verificarSaldoSuficiente( connection, cuenta.getNumeroCuenta(), montoLong) != false){
            // Confirmar los datos si todas las validaciones pasan

            if (ProcesosControlador.confirmarDatosTransferencia(cuenta_Destino, cedula_destinatario, nombreDestinatario)){

                Transferencia transferencia = new Transferencia
                        (new Date(System.currentTimeMillis()),cuenta.getNumeroCuenta(), cuenta_Destino, montoLong);
                PinTransaccionInterfaz ventanaPIN = new PinTransaccionInterfaz(transferencia, cliente, cuenta);
                ventanaPIN.setVisible(true);
                this.dispose();
//                cuenta.setSaldoCuenta(cuenta.getSaldoCuenta() - montoLong);
//                saldo.setText(Double.toString(cuenta.getSaldoCuenta()));
//                nombre_destinatario.setText("");
//                cuentaDestino.setText("");
//                cedula.setText("");
//                monto.setText("");
            }
            }else{
                mostrarMensajeError("Saldo insuficiente.");
            }

            } catch (NumberFormatException e) {
                // Manejar la excepción si hay un error al convertir los números
                mostrarMensajeError("Error al ingresar los datos. Intente de nuevo.");
            } catch (SQLException ex) {
                Logger.getLogger(BaseInterfaz.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_boton_confirmarTransaccion1ActionPerformed
    
    private void mostrarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    private void cuentaDestinoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestinoActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_cuentaDestinoActionPerformed

    private void cedulaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaActionPerformed

    private void nombre_destinatarioActionPerformed(ActionEvent evt) {//GEN-FIRST:event_nombre_destinatarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre_destinatarioActionPerformed

    private void montoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_montoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_montoActionPerformed

    private void saldoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_saldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoActionPerformed

    private void numero_origenActionPerformed(ActionEvent evt) {//GEN-FIRST:event_numero_origenActionPerformed
    
    }//GEN-LAST:event_numero_origenActionPerformed
    
    
    
    private void boton_cancelarTransaccion2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_cancelarTransaccion2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_cancelarTransaccion2ActionPerformed

    private void boton_confirmarDepositoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_confirmarDepositoActionPerformed
        try {
        Connection connection = ConexionBD.conectar();

        // Obtener el monto del depósito como String
        String montoDepositoString = montoDeposito.getText();

        // Convertir el String a double
        double deposito = Double.parseDouble(montoDepositoString);
        System.out.println(deposito);
        Deposito depositoObj = new Deposito(Date.from(Instant.now()), cuenta, deposito);
        if(deposito>0){
            depositoObj.realizarTransaccion();
            ComprobanteInterfaz comprobante = new ComprobanteInterfaz(cliente, cuenta, depositoObj);
            comprobante.setVisible(true);
            cuenta.setSaldoCuenta(cuenta.getSaldoCuenta() + deposito);
            // Imprimir el saldo actualizado (opcional)
            saldoDeposito.setText(Double.toString(cuenta.getSaldoCuenta()));
            dispose();
        // Sumar el depósito al saldo de la cuenta
        }
        else {
              JOptionPane.showMessageDialog(null, "Monto invalido", "Error", JOptionPane.ERROR_MESSAGE);
                }
      
    } catch (NumberFormatException e) {
        // Manejar la excepción si el formato del montoDeposito no es válido
         JOptionPane.showMessageDialog(null, "Monto invalido", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_boton_confirmarDepositoActionPerformed

    private void montoDepositoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_montoDepositoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_montoDepositoActionPerformed

    private void saldoDepositoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_saldoDepositoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldoDepositoActionPerformed

    private void cuentaDestino39ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestino39ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestino39ActionPerformed

    private void cuentaDestino38ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestino38ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestino38ActionPerformed

    private void cuentaDestino37ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestino37ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestino37ActionPerformed

    private void cuentaDestino36ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestino36ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestino36ActionPerformed

    private void cuentaDestino35ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestino35ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestino35ActionPerformed

    private void boton_confirmarTransaccion6ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_confirmarTransaccion6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_confirmarTransaccion6ActionPerformed

    private void boton_cancelarTransaccion6ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_cancelarTransaccion6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_cancelarTransaccion6ActionPerformed

    private void jComboBox1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void cuenta_origen_pago_servActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuenta_origen_pago_servActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuenta_origen_pago_servActionPerformed

    private void saldo_pago_servActionPerformed(ActionEvent evt) {//GEN-FIRST:event_saldo_pago_servActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saldo_pago_servActionPerformed

    private void monto_ingresadoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_monto_ingresadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monto_ingresadoActionPerformed

    private void cuentaDestino33ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cuentaDestino33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestino33ActionPerformed

    private void confirmar_pago_servActionPerformed(ActionEvent evt) {//GEN-FIRST:event_confirmar_pago_servActionPerformed
        double monto;        
        long tarjeta_usada;
        boolean monto_valido = false;
        try{
            Connection connection = ConexionBD.conectar();
            if (monto_ingresado.getText().equals("")){          
                monto = Double.parseDouble(monto_definido.getText());
                monto_valido = true; 
            }
            else{
                try{
                monto = Double.parseDouble(monto_ingresado.getText());
                if (monto > 0){
                    monto_valido = true;
                }
                }catch(NumberFormatException errorDeMonto){
                    monto = 0;
                    monto_valido = false;
                    JOptionPane.showMessageDialog(null, "Monto invalido", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            if(monto_valido){
                PagoServicio pagoServicio = new PagoServicio(null, cuenta, null, monto);
                Servicio servicio = new Servicio(0L, (String) servicio_a_pagar.getSelectedItem(), Double.parseDouble(monto_definido.getText()));
                pagoServicio.setServicio(servicio);
                if(metodo_de_pago.getSelectedIndex() != 0){
                    String numberString = (String)metodo_de_pago.getSelectedItem();
                    numberString = numberString.substring(4);
                    tarjeta_usada = Long.parseLong(numberString);
                    TarjetaDeCredito tarjetaDeCredito = new TarjetaDeCredito();
                    tarjetaDeCredito.setCliente_asociado(cliente);
                    tarjetaDeCredito.setNro_tarjeta(tarjeta_usada);
                    pagoServicio.setTarjetaAbonante(tarjetaDeCredito);
                }
                else{
                    pagoServicio.setCuenta(cuenta);
                }
                PinTransaccionInterfaz ventanaPIN = new PinTransaccionInterfaz(pagoServicio, cliente, cuenta);
                ventanaPIN.setVisible(true);
                this.dispose();
            }else
                JOptionPane.showMessageDialog(null, "Monto invalido, verifiquelo e intente de nuevo", "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch (Error e){
            JOptionPane.showMessageDialog(null, "Limite de deuda excedido, pague su deuda y vuelva a intentar", "Error", JOptionPane.ERROR_MESSAGE);
        }//catch (SaldoInsuficienteException e){
//            JOptionPane.showMessageDialog(null, "Saldo insuficiente, pago no realizado", "Error", JOptionPane.ERROR_MESSAGE);
//        }catch (Error e){
//
//        }
    }//GEN-LAST:event_confirmar_pago_servActionPerformed

    private void boton_cancelarTransaccion7ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_cancelarTransaccion7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_cancelarTransaccion7ActionPerformed

    private void servicio_a_pagarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_servicio_a_pagarActionPerformed
        ArrayList<Servicio> servicios = obtenerTodosLosServicios();
        Servicio servicio_elegido = servicios.get(0);
        for(Servicio servicio: servicios){
            if (servicio.get_NombreServicio().equals(servicio_a_pagar.getSelectedItem()))
                servicio_elegido = servicio;
        }
       
        if (servicio_elegido.get_CostoServicio() != 0){
            monto_definido.setText(servicio_elegido.get_CostoServicio() + "");
            monto_ingresado.setText("");
            monto_ingresado.setEditable(false);
        }
        else{
            monto_definido.setText("No definido");
            monto_ingresado.setEditable(true);
        }
        System.out.println(servicio_elegido.get_CostoServicio());
    }//GEN-LAST:event_servicio_a_pagarActionPerformed

    private void monto_definidoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_monto_definidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monto_definidoActionPerformed

    private void button3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button3ActionPerformed

    private void metodo_de_pagoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_metodo_de_pagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metodo_de_pagoActionPerformed

    public void activarMenuTransferencia() {
        boton_transferenciaCuentaActionPerformed(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                //BaseInterfaz loginInterfaz = new BaseInterfaz();
                //loginInterfaz.boton_transferenciaCuentaActionPerformed(null);
                //loginInterfaz.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLayeredPane InterfazPrincipal;
    private JTable TablaConsulta;
    private Button boton_acercaSistema;
    private Button boton_cancelarTransaccion1;
    private Button boton_cancelarTransaccion2;
    private Button boton_cancelarTransaccion6;
    private Button boton_cancelarTransaccion7;
    private Button boton_cerrarSesion;
    private Button boton_confirmarDeposito;
    private Button boton_confirmarTransaccion1;
    private Button boton_confirmarTransaccion6;
    private Button boton_consultarSaldo;
    private Button boton_deposito;
    private Button boton_pagarServicio;
    private Button boton_pagarTarjeta;
    public Button boton_transferenciaCuenta;
    private JLayeredPane botonesMenu;
    private Button button3;
    public JTextField cedula;
    private Button confirmar_pago_serv;
    public JTextField cuentaDestino;
    private JTextField cuentaDestino33;
    private JTextField cuentaDestino35;
    private JTextField cuentaDestino36;
    private JTextField cuentaDestino37;
    private JTextField cuentaDestino38;
    private JTextField cuentaDestino39;
    private JTextField cuenta_origen_pago_serv;
    private JLabel fondo1;
    private JComboBox<String> jComboBox1;
    private JDesktopPane jDesktopPane1;
    private JLayeredPane jLayeredPane1;
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JTabbedPane jTabbedPane1;
    private Label label1;
    private Label label10;
    private Label label11;
    private Label label12;
    private Label label13;
    private Label label17;
    private Label label19;
    private Label label2;
    private Label label34;
    private Label label35;
    private Label label36;
    private Label label37;
    private Label label38;
    private Label label39;
    private Label label40;
    private Label label41;
    private Label label42;
    private Label label43;
    private Label label44;
    private Label label45;
    private Label label46;
    private Label label48;
    private Label label53;
    private Label label54;
    private Label label55;
    private Label label56;
    private Label label7;
    private Label label8;
    private Label label9;
    private List list1;
    private JLabel logo;
    private Panel menu_acercaSistema;
    private Panel menu_consultarSaldo;
    private Panel menu_deposito;
    private JLayeredPane menu_interaccion;
    private Panel menu_pagarServicio;
    private Panel menu_pagarTarjeta;
    private Panel menu_transferencia;
    private JComboBox<String> metodo_de_pago;
    public JTextField monto;
    private JTextField montoDeposito;
    private JTextField monto_definido;
    private JTextField monto_ingresado;
    public JTextField nombre_destinatario;
    private JTextField numero_origen;
    private JTextField saldo;
    private JTextField saldo1;
    private JTextField saldoDeposito;
    private JTextField saldo_pago_serv;
    private JLayeredPane separador;
    private JComboBox<String> servicio_a_pagar;
    private JLabel texto_fecha;
    private JLabel texto_usuario;
    // End of variables declaration//GEN-END:variables
}
